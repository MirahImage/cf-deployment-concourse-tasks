#!/bin/bash
set -eux

# shellcheck disable=SC1091
source cf-deployment-concourse-tasks/shared-functions

function check_upload_stemcell_params() {
  if [ -z "$INFRASTRUCTURE" ]; then
    echo "INFRASTRUCTURE has not been set"
    exit 1
  fi
  local supported_infrastructures
  supported_infrastructures=("aws" "google" "boshlite" "bosh-lite" "vsphere")
  any_matched=false
  for iaas in ${supported_infrastructures[*]}; do
    if [ "${INFRASTRUCTURE}" == "${iaas}" ]; then
      any_matched=true
      break
    fi
  done
  if [ "$any_matched" = false ]; then
    echo "${INFRASTRUCTURE} is not supported; please choose a value from ${supported_infrastructures[*]}"
    exit 1
  fi
}

function upload_stemcell() {
  local os
  os=$1
  local version
  version=$2

  # Hardcode a couple of stable stemcell paramaters
  local stemcells_url
  stemcells_url="https://bosh.io/d/stemcells"

  local stemcell_name
  stemcell_name="bosh"

  if [ "$INFRASTRUCTURE" = "aws" ]; then
    stemcell_name="${stemcell_name}-aws-xen-hvm"
  elif [ "$INFRASTRUCTURE" = "google" ]; then
    stemcell_name="${stemcell_name}-google-kvm"
  elif [ "$INFRASTRUCTURE" = "boshlite" ]; then
    stemcell_name="${stemcell_name}-warden-boshlite"
  elif [ "$INFRASTRUCTURE" = "bosh-lite" ]; then
    stemcell_name="${stemcell_name}-warden-boshlite"
  elif [ "$INFRASTRUCTURE" = "vsphere" ]; then
    stemcell_name="${stemcell_name}-vsphere-esxi"
  fi

  stemcell_name="${stemcell_name}-${os}-go_agent"
  if [ "$version" = "latest" ]; then
    full_stemcell_url="${stemcells_url}/${stemcell_name}"
  else
    full_stemcell_url="${stemcells_url}/${stemcell_name}?v=${version}"
  fi

  bosh \
    -n \
    upload-stemcell \
    "${full_stemcell_url}"
}

function upload_stemcells() {
  local arguments=''
  for op in ${OPS_FILES_WITH_STEMCELLS}
  do
    arguments="${arguments} -o cf-deployment/${op}"
  done

  bosh interpolate ${arguments} cf-deployment/${MANIFEST_FILE} > /tmp/cf.yml

  local stemcells_json=$(ruby -rjson -ryaml -e "puts YAML.load_file('/tmp/cf.yml').to_json" | jq .stemcells)
  local size=$(echo ${stemcells_json} | jq 'length')

  for i in `seq 0 $((size - 1))`
  do
    local os=$(echo ${stemcells_json} | jq -r .[$i].os)
    local version=$(echo ${stemcells_json} | jq -r .[$i].version)
    upload_stemcell ${os} ${version}
  done
}

function main() {
  check_upload_stemcell_params
  setup_bosh_env_vars
  upload_stemcells
}

main

